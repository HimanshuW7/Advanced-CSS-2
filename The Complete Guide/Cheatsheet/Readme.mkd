# Markdown Cheatsheet for CSS Features

## [Cheatsheet Markdown](https://www.markdownguide.org/cheat-sheet/)

*Ctrl + shift + v* **For Preview*

1. *Cascading Styles Sheets and Specifity:*

* ![Priority](image.png)

---

2. *Combinators:*

* **Understanding Combinators:**

![Priority](image-2.png)

* **Types of Combinators:**

> Adjacent Sibling
> General Sibling
> Child
> Descendant

* **Adjacent Sibling:**

![Adj. Sibling](image-3.png)

* **Adjacent Sibling:**

![Gen. Sibling](image-4.png)

* **Child:**

![Child](image-5.png)

* **Descendant:**

![Descendant](image-6.png)

---

3. *Properties & Selectors:*

* **Selectors, Properties, Values:**

![Selectors, Properties, Values](image-7.png)

* **Value Types:**

![Value Types](image-8.png)

---

4. *Useful Resources & Links:*

* ![Summary](image-9.png)

* Complete MDN CSS Reference (don't learn this by heart!): **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/Reference')**

* Do you prefer reading? Find written CSS docs on MDN: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS')**

* Common CSS Properties Reference: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Properties_Reference')**

* CSS Combinators: **[Reference]('https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Combinators_and_multiple_selectors')**

* More details on CSS Specifity: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity')**

---

5. *Margin Collapsing:*

* ![Margin Collapsing](image-10.png)

* For More **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing')**

---

6. *Shorthand Properties:*

* ![Shorthand Properties](image-11.png)

---

7. *Block-Inline vs Inline Elements:*

For More **[Reference]('https://academind.com/learn/html/beginner-s-guide/diving-deeper-into-html#block-level-vs-inline-elements')**

---

8. *Pseudo Classes & Pseudo Elements:*

* ![Pseudo Classes & Pseudo Elements](image-12.png)

---

9. *Points Worth to Remember:*

* ![Points Worth to Remember](image-13.png)

---

10. *Useful Resources & Links:*

* ![Summary](image-14.png)

* CSS Box Model: **[Reference]('https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Box_model')**

* box-sizing: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing')**

* More on height & width: **[Reference]('https://www.w3schools.com/css/css_dimension.asp')**

* The display  Property: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/display')**

* Pseudo Classes on the MDN: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes')**

* Dive deeper into Pseudo Elements: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements')**

---

11. *Classes or Ids:*

* ![Classes or Ids](image-15.png)

---

12. *Useful Resources & Links:*

* A discussion on "classes vs IDs": **[Reference]('https://stackoverflow.com/questions/12889362/difference-between-id-and-class-in-css-and-when-to-use-it')**

* When is using `!important`  okay? =>: **[Reference]('https://css-tricks.com/when-using-important-is-the-right-choice')**

* The `:not()`  pseudo class: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/:not')**

* Can I Use: **[Reference]('https://caniuse.com/')**

* More on float: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/float')**

---

13. *Positioning & Useful Resources & Links:*

* ![Wrap Up](image-16.png)

* **Dive Deeper into Selected Topics**

* Positioning theory: **[Reference]('https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning')**

* More about the "position" property: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/position')**

* The z-index: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/z-index')**

* The Stacking Context: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context')**

* The "sticky" value and current browser support: **[Reference]('https://caniuse.com/#search=sticky')**

---

14. *The Background Property:*

* ![The Background Property](image-17.png)

---

15. *Background Images & Images:*

* ![Stacking Multiple Backgrounds](image-18.png)

* ![Filters](image-19.png)

* ![Summary](image-20.png)

* **Useful Resources & Links**

* The `background` Property: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/background')**

* Styling Images: **[Reference]('https://www.w3schools.com/css/css3_images.asp')**

* Filters: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/filter')**

* Styling SVG: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_and_CSS')**

---

16. *Sizes & Units:*

* **Where Units Matter?**

* ![Where Units Matter](image-21.png)

* **How Size is Calculated?**

* ![How Size is Calculated](image-22.png)

* **How is the Box Size for % Units Calculated?**

* ![How is the Box Size for % Units Calculated](image-23.png)

* **Rules to Remember:**

* Whenever we have an element which has fixed declaration appiled and fixed percentage unit, well the containing block is the viewport.

* The contaning of an element with the with absolute declaration applied is the closest ancestor which is not position static.

* The third rule only apply if our element with the percentage unit is static or realtive and its look like its closest ancentor which is a block level element.

* ![Rules to Remember](image-24.png)

* **Windows, Viewport Units & Scrollbars:**

### Hiding Scrollbars on Windows machines

After adding `vw` , you probably saw that the scrollbars appeared in case you are working on Windows. This happens as using `vw`  on Windows does not include the scrollbars - `vw: 100`  is  equal to 100% of the viewport width + the scrollbars. On the Mac this is not an issue, but when using Windows it is as the scrollbars are displayed by default.

In case you don't want to display these scrollbars, you can use one of these solutions:

> Use `width: 100%`  instead of `vw: 100`
> Add `overflow-x: hidden;`  to the `body` selector in the shared.css file to hide the horizontal scrollbar (or `overflow-y: hidden`  to hide the vertical scrollbar)

Alternatively you could also use the `::-webkit-scrollbar` pseudo element. Simply add the following code to the shared.css file:

``` *Example:*

body: :-webkit-scrollbar {
    width: 0
}

```

To make sure this works correctly on different browsers, you have to add additional code to it. This **[blog post]('https://web.archive.org/web/20180505112131/https://blogs.msdn.microsoft.com/kurlak/2013/11/03/hiding-vertical-scrollbars-with-pure-css-in-chrome-ie-6-firefox-opera-and-safari/')** nicely summarizes all the code needed right here.

Make sure to follow these approaches in case you don't want to display the scrollbars on Windows machines.

* **Choosing Right Unit:**

* ![Rules to Remember](image-25.png)

* ![Wrap Up](image-26.png)

* **Useful Resources & Links:**

Dive Deeper into Selected Topics

* Font size properties and values: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/font-size')**

* Viewport units and browser support: **[Reference]('https://caniuse.com/#search=vh')**

---

17. *Useful Resources & Links:*

* ![Rules to Remember](image-27.png)

* JavaScript Basics: **[Reference]('https://academind.com/learn/javascript')**

* JavaScript CSS Styles: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style')**

* `classList` : **[Reference]('https://developer.mozilla.org/en-US/docs/Web/API/Element/classList')**

---

18. *Responsiveness:*

* ![Absolute Lengths](image-28.png)

* **[CSS Values]('https://www.w3.org/TR/css-values-3/#:~:text=5.2.-,Absolute%20Lengths%3A%20the%20cm%2C%20mm%2C%20Q%2C%20in,%2C%20pt%2C%20pc%2C%20px%20units')**

* **[Compare Devices]('https://www.mydevice.io/#compare-devices')**

### Dive Deeper into Selected Topics

* Absolute lengths on W3.org: **[Reference]('https://www.w3.org/TR/css-values-3/#absolute-lengths')**

* More about device sizes: **[Reference]('https://bjango.com/articles/min-device-pixel-ratio/')**

* Media queries theory: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries')**

* Applying media queries: **[Reference]('https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries')**

* ![Summary](image-29.png)

---